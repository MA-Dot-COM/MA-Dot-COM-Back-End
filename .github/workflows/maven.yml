# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CICD with Maven

on: # 이벤트 감지, 워크플로우를 실행시키는 조건 설정
  push:
    branches: [ "main" ] # push 되면 실행될 브랜치 선택(main)
  pull_request:
    branches: [ "main" ] # pull_request(PR) 되면 실행될 브랜치 선택(main)

jobs: # job - 하나의 인스턴스에서 여러 Step을 그룹시켜 실행하는 역할, 병렬로 실행
  build:

    runs-on: ubuntu-latest

    steps: # 순차적으로 명령어 수행
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Set yml file # YML 설정
      uses: microsoft/variable-substitution@v1
      with:
        files: ./src/main/resources/application.yml
      env: 
        spring.datasource.url: ${{ secrets.RDBMS_URL }} 
        spring.data.mongodb.uri: ${{ secrets.NOSQL_URI }} 
        spring.mail.username: ${{ secrets.MAIL_USER_ID }} 
        spring.mail.password: ${{ secrets.MAIL_USER_PW }}
        jwt.secret: ${{ secrets.JWT_SECRET }}
        cloud.aws.s3.bucket: ${{ secrets.AWS_S3_BUCKET }}
        url.avatar: ${{ secrets.AI_AVATAR }}
        url.lifing: ${{ secrets.AI_LIFING }}
        url.friend: ${{ secrets.AI_FRIEND }}

    # Caching dependencies
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Get Current Time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYY-MM-DDTHH:mm:ss
        utcOffset: "+09:00" # 기준이 UTC이기 때문에 한국시간인 KST를 맞추기 위해 +9시간 추가

    - name: Print Current Time
      run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}" # current-time 에서 지정한 포맷대로 현재 시간 출력
      shell: bash


    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build DockerImage
      run: docker build -t john782/springbootserver:latest ./
        
    - name: Push DockerImage
      run: docker push john782/springbootserver:latest

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  deploy:
      name: CD PipeLine
      runs-on: ubuntu-latest
      needs: build
      
      steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}   
          aws-region: ${{ secrets.AWS_REGION }}  
          
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"    
          
      - name: Generate deployment directory
        run: |
          mkdir -p deploy
          cp Dockerrun.aws.json deploy/Dockerrun.aws.json
          cd deploy && zip -r deploy.zip .
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
          environment_name: ${{ secrets.AWS_EB_ENV_NAME }}
          application_name: ${{ secrets.AWS_EB_APP_NAME }}
          version_label: john782-cicd-${{steps.current-time.outputs.formattedTime}}
          deployment_package: deploy/deploy.zip
